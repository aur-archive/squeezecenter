post_install() {
  echo -n "adding squeezeboxserver user... "
  useradd -c "squeezeboxserver" -g users -s /bin/false squeezeboxserver && echo "done."
  passwd -l squeezeboxserver &>/dev/null

  chown -R squeezeboxserver:users /opt/squeezeboxserver
    
  install -o squeezeboxserver -d /var/cache/squeezeboxserver
  install -o squeezeboxserver -d /var/squeezeboxserver/plugin
  install -o squeezeboxserver -d /var/opt/squeezeboxserver/plugin
  touch /var/log/squeezeboxserver.log
  chown squeezeboxserver /var/log/squeezeboxserver.log
  
  cat << 'EOM'

==> Additional run-time options can be added to /etc/conf.d/squeezeboxserver.
==> Please refer to "/opt/squeezeboxserver/slimserver.pl --help" for full details.

EOM
  if [ -e /home/squeezecenter/prefs/server.prefs ]; then
    echo "Copying server preferences from squeezecenter..." 
    cp -r /home/squeezecenter/prefs /var/opt/squeezeboxserver
    chown -R squeezeboxserver /opt/squeezeboxserver
  fi	
}

post_upgrade() {
  if [ -e /var/opt/squeezeboxserver/server.prefs ]; then
    echo "Preferences found at /var/opt/squeezeboxserver"
  else
    echo "Copying server preferences from prefs to /var/opt/squeezeboxserver..." 
    cp -r /opt/squeezeboxserver/prefs /var/opt/squeezeboxserver
    chown -R squeezeboxserver /var/opt/squeezeboxserver
  fi
  cat << 'EOM'

IMPORTANT 

As SqueezeboxServer used to be known as SqueezeCenter a seemless upgrade is not
really possible. After an "upgrade" from Squeezecenter you will still have
your old Squeezcenter folder that you well have to delete manually.
It is recommended to first pacman -R squeezecenter. You preferences will be 
preserved.
Most product named directories and config files have changed. This means
that for instance a customized /etc/conf.d/squeezecenter config file will not
be used but a new /etc/conf.d/squeezeboxserver is created created and used
thereafter.
EOM
}

pre_remove() {
  # pre_remove gets called whenever post_remove is defined.
  echo -n -e "stopping squeezeboxserver... "
  kill `cat /var/run/squeezeboxserver.pid` &>/dev/null
}

post_remove() {
  # post_remove doesn't start at a newline like the other post_* functions,
  # so we'll have to make one for ourselves.
  echo -n -e "\nremoving squeezeboxserver user... "
  userdel squeezeboxserver && echo "done."
  rm -r /opt/squeezeboxserver
  rm -r /var/cache/squeezeboxserver /var/log/squeezeboxserver.log
  echo "done"
}

op=$1
shift
$op $*

